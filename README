braid
Copyright 2015 by Alden Walker

braid works with braids on a punctured disk

Example (standard braid):

In [1]: import braid
In [2]: DC = braid.DiskComplement(n=3)
In [3]: b1 = braid.DiskComplementBraid(-1,[],1)
In [4]: b2 = braid.DiskComplementBraid(0,[],2)
In [5]: p1 = braid.DiskComplementHomeo(0,1)
In [6]: p2 = braid.DiskComplementHomeo(2,1)
In [7]: DC.add_braid(b1,b2)
In [8]: DC.apply_homeo(p2,p1)
In [9]: DC.apply_homeo(p2,p1)
In [10]: DC.show()

Example with shorthand input:

In [11]: DC = braid.DiskComplement(n=3)
In [12]: DC.add_braid([-1,1],[0,2])
In [13]: DC.apply_homeo(0,1)
In [14]: DC.apply_homeo(2,1)
In [15]: DC.apply_homeo(0,1)
In [16]: DC.apply_homeo(2,1)
In [17]: DC.show()

Example with lots of punctures and Cantor-style circle placement

In [28]: DC = braid.DiskComplement(kind='cantor', depth=4)
In [29]: DC.add_braid([0,1,2,3,4,9,13,14])
In [30]: DC.show()
In [31]: DC.apply_homeo(2,12)


